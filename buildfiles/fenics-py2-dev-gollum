# vim: set ft=sh:
pkgname=fenics-py2
pkgver=dev
srcdir=dolfin
baseurl=https://bitbucket.org/fenics-project

module load hdf5 openmpi petsc-py2 slepc-py2 vtk-py2

# necessary for python dependencies
export PYTHONPATH=$PYTHONPATH:$destdir/lib/python2.7/site-packages
export PATH=$PATH:$destdir/bin
export USE_CMAKE=1
export MAKE_NUMJOBS=11
export HDF5_ROOT=$HDF5_DIR

prepare()
{
  # we override default behaviour to download all dependecies
  mkdir -pv $tmpdir
  pushd $tmpdir
  # fenics-project dependencies
  for fenicspkg in "ufl" "fiat" "instant" "ffc" "dolfin" "mshr" "dijitso"; do
    if [ ! -d "$fenicspkg" ]; then
      git clone git@bitbucket.org:fenics-project/$fenicspkg.git
    else
      git -C $fenicspkg pull
    fi
    pushd ${fenicspkg}
    # patches
    if [[ "x${fenicspkg}" == "xdolfin" ]]; then
      git apply $REPO/buildfiles/dolfin_vtk_version.patch
    fi
    popd
  done
  popd
  # clean-up
  [[ -d $builddir ]] && rm -rf $builddir
  mkdir $builddir
  # remove old installation
  [[ -d $destdir ]] && rm -rfv $destdir
  # install dependencies
  mkdir -pv $destdir/lib/python2.7/site-packages
  for fenicspkg in "dijitso" "ufl" "fiat" "instant" "ffc"; do
    pushd $tmpdir/${fenicspkg}
    python2 setup.py install --prefix=$destdir
    popd
  done
}

export CXXFLAGS="-fext-numeric-literals"
confopts=$(cat <<END_HEREDOC
-D BUILD_SHARED_LIBS:BOOL=ON
-D DOLFIN_ENABLE_TRILINOS:BOOL=OFF
-D DOLFIN_ENABLE_DOCS:BOOL=OFF
-D DOLFIN_ENABLE_TESTING:BOOL=OFF
-D PYTHON_EXECUTABLE:PATH=/usr/bin/python2
-D PYTHON_LIBRARY:PATH=`python2-config --prefix`/lib/libpython2.7.so
-D PYTHON_INCLUDE_DIR:PATH=`python2-config --prefix`/include/python2.7
END_HEREDOC
)

# override, this would delete $destdir
pre_package() { :; }

# install extra packages
post_package()
{
  pushd $tmpdir
  # mshr
  pushd mshr
  [[ -d build ]] && rm -rf build
  mkdir -pv build && cd build
  cmake \
    -DCMAKE_INSTALL_PREFIX:PATH=$destdir \
    -D PYTHON_EXECUTABLE:PATH=/usr/bin/python2 \
    -D PYTHON_LIBRARY:PATH=`python2-config --prefix`/lib/libpython2.7.so \
    -D PYTHON_INCLUDE_DIR:PATH=`python2-config --prefix`/include/python2.7 \
    ../
  make install
  popd
  # libadjoint
  if [[ -d libadjoint ]]; then
    git -C libadjoint pull
  else
    git clone git@bitbucket.org:dolfin-adjoint/libadjoint.git
  fi
  pushd libadjoint
  [[ -d build ]] && rm -rf build
  mkdir -pv build && cd build
  cmake \
    -DCMAKE_INSTALL_PREFIX:PATH=$destdir \
    -D PYTHON_EXECUTABLE:PATH=/usr/bin/python2 \
    -D PYTHON_LIBRARY:PATH=`python2-config --prefix`/lib/libpython2.7.so \
    -D PYTHON_INCLUDE_DIR:PATH=`python2-config --prefix`/include/python2.7 \
    ../
  make install
  popd
  # dolfin-adjoint
  if [[ -d dolfin-adjoint ]]; then
    git -C dolfin-adjoint pull
  else
    git clone git@bitbucket.org:dolfin-adjoint/dolfin-adjoint.git
  fi
  pushd dolfin-adjoint
  python2 setup.py install --prefix=$destdir
  popd
  # moola
  if [[ -d moola ]]; then
    git -C moola pull
  else
    git clone https://github.com/funsim/moola.git
  fi
  pushd moola
  python2 setup.py install --prefix=$destdir
  popd
  popd
}

pkgmodule=$(cat <<END_HEREDOC
#%Module
module load hdf5 openmpi petsc-py2 slepc-py2 vtk-py2 gmsh

set FENICS_DIR $destdir

prepend-path PATH \$FENICS_DIR/bin
prepend-path MANPATH \$FENICS_DIR/share/man
prepend-path PKG_CONFIG_PATH \$FENICS_DIR/lib/pkgconfig
prepend-path PYTHONPATH \$FENICS_DIR/lib/python2.7/site-packages
prepend-path LD_LIBRARY_PATH \$FENICS_DIR/lib
END_HEREDOC
)
