# vim: set ft=sh:
srcdir=dolfin-${pkgver}
baseurl=https://bitbucket.org/fenics-project

module load hdf5 openmpi petsc slepc vtk
moduledeps+=("hdf5" "openmpi" "petsc" "slepc" "vtk" "gmsh")

# necessary for python dependencies
export PYTHONPATH=$PYTHONPATH:$destdir/lib/python2.7/site-packages
export PATH=$PATH:$destdir/bin
export USE_CMAKE=1
export MAKE_NUMJOBS=11
export HDF5_ROOT=$HDF5_DIR
export PYTHON=python

PYTHON=python
confextra=""
DYN=so

fenicspkgs=("ufl" "fiat" "instant" "ffc" "dolfin" "mshr")
if [ "x${pkgver}" == "x2016.2.0" ]; then
  fenicspkgs+=("dijitso")
fi

if [[ ${HOSTNAME} == "ics"* ]]; then
  # cmake is not available on ICS-HPC, and system python is old
  module load cmake python/intel27
  moduledeps+=("cmake" "python/intel27")
elif [[ ${HOSTNAME} == "gollum" ]]; then
  # python is python2
  PYTHON=python2
  export CXXFLAGS="-fext-numeric-literals"
elif [[ ${HOSTNAME} == "mbpro" ]]; then
  PYTHON=python
  confextra+=" -DCMAKE_OSX_DEPLOYMENT_TARGET:STRING=10.12"
  confextra+=" -DCMAKE_SKIP_INSTALL_RPATH:BOOL=OFF"
  confextra+=" -DCMAKE_SKIP_BUILD_RPATH:BOOL=OFF"
  confextra+=" -DCMAKE_INSTALL_NAME_DIR:PATH=$destdir/lib"
  DYN=dylib
fi

confopts=$(cat <<END_HEREDOC
-D DOLFIN_USE_PYTHON3=OFF
-D BUILD_SHARED_LIBS:BOOL=ON
-D DOLFIN_ENABLE_TRILINOS:BOOL=OFF
-D DOLFIN_ENABLE_DOCS:BOOL=OFF
-D DOLFIN_ENABLE_TESTING:BOOL=OFF
-D PYTHON_EXECUTABLE:PATH=$(which $PYTHON)
-D PYTHON_LIBRARY:PATH=`$PYTHON-config --prefix`/lib/libpython2.7.$DYN
-D PYTHON_INCLUDE_DIR:PATH=`$PYTHON-config --prefix`/include/python2.7
${confextra}
END_HEREDOC
)

prepare()
{
  # we override default behaviour to download all dependecies
  mkdir -pv $tmpdir && pushd $tmpdir
  # fenics-project dependencies
  for fenicspkg in "${fenicspkgs[@]}"; do
    makepkg_download ${baseurl}/${fenicspkg}/downloads/${fenicspkg}-${pkgver}.tar.gz
    makepkg_untar ${fenicspkg}-${pkgver}.tar.gz
    pushd ${fenicspkg}-${pkgver}
    # patches
    if [[ "x${fenicspkg}" == "xdolfin" ]]; then
      patch -Np0 < $REPO/buildfiles/dolfin_vtk_version.patch
      if [ "x$pkgver" == "x2016.2.0" ]; then
        patch -Np0 < $REPO/buildfiles/dolfin_boost163.patch
      fi
      if [ "x$pkgver" == "x2016.1.0" ]; then
        git apply $REPO/buildfiles/dolfin_hdf5_clib.patch
      fi
    elif [[ "x${fenicspkg}" == "xinstant" ]]; then
      if [ "x$pkgver" == "x2016.1.0" ]; then
        patch -Np1 < $REPO/buildfiles/instant_python_exe.patch
      fi
    elif [[ "x${fenicspkg}" == "xmshr" ]]; then
      #if [ "x$pkgver" == "x2016.2.0" ]; then
        patch -Np0 < $REPO/buildfiles/mshr_vtk_version.patch
      #fi
    fi
    popd
  done
  popd
  # clean-up
  [[ -d $builddir ]] && rm -rf $builddir
  mkdir $builddir
  # remove old installation
  [[ -d $destdir ]] && rm -rfv $destdir
  # install dependencies
  mkdir -pv $destdir/lib/python2.7/site-packages
  for fenicspkg in "dijitso" "ufl" "fiat" "instant" "ffc"; do
    if [ -d "$tmpdir/${fenicspkg}-${pkgver}" ]; then
      pushd $tmpdir/${fenicspkg}-${pkgver}
      $PYTHON setup.py install --prefix=$destdir
      popd
    fi
  done
  # target specific
  if [[ ${HOSTNAME} == "mbpro" ]]; then
    # this is not necessary anymore, use cmake one
    rm ${tmpdir}/dolfin-${pkgver}/cmake/modules/FindBoost.cmake
  fi
}

# override, this would delete $destdir
pre_package() { :; }

# install extra packages
post_package()
{
  pushd $tmpdir
  # mshr
  pushd mshr-${pkgver}
  [[ -d build ]] && rm -rf build
  mkdir -pv build && cd build
  cmake \
    -DCMAKE_INSTALL_PREFIX:PATH=$destdir \
    -D PYTHON_EXECUTABLE:PATH=$(which $PYTHON) \
    -D PYTHON_LIBRARY:PATH=`$PYTHON-config --prefix`/lib/libpython2.7.$DYN \
    -D PYTHON_INCLUDE_DIR:PATH=`$PYTHON-config --prefix`/include/python2.7 \
    ../
  make install
  popd
  # libadjoint
  makepkg_git git@bitbucket.org:dolfin-adjoint/libadjoint.git libadjoint
  pushd libadjoint
  [[ -d build ]] && rm -rf build
  mkdir -pv build && cd build
  cmake \
    -DCMAKE_INSTALL_PREFIX:PATH=$destdir \
    -D PYTHON_EXECUTABLE:PATH=$(which $PYTHON) \
    -D PYTHON_LIBRARY:PATH=`$PYTHON-config --prefix`/lib/libpython2.7.$DYN \
    -D PYTHON_INCLUDE_DIR:PATH=`$PYTHON-config --prefix`/include/python2.7 \
    ../
  make install
  popd
  # dolfin-adjoint
  makepkg_git git@bitbucket.org:dolfin-adjoint/dolfin-adjoint.git dolfin-adjoint
  pushd dolfin-adjoint
  $PYTHON setup.py install --prefix=$destdir
  popd
  # moola
  makepkg_git https://github.com/funsim/moola.git moola
  pushd moola
  $PYTHON setup.py install --prefix=$destdir
  popd
  popd
}

