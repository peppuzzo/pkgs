# vim: set ft=sh:
srcdir=dolfin-${pkgver}
baseurl=https://bitbucket.org/fenics-project

module load hdf5 openmpi petsc slepc vtk
moduledeps+=("hdf5" "openmpi" "petsc" "slepc" "vtk" "gmsh")

# necessary for python dependencies
export PYTHONPATH=$PYTHONPATH:$destdir/lib/python2.7/site-packages
export PATH=$PATH:$destdir/bin
export USE_CMAKE=1
export MAKE_NUMJOBS=11
export HDF5_ROOT=$HDF5_DIR
export PYTHON=python2

prepare()
{
  # we override default behaviour to download all dependecies
  mkdir -pv $tmpdir && pushd $tmpdir
  # fenics-project dependencies
  for fenicspkg in "ufl" "fiat" "instant" "ffc" "dolfin" "mshr"; do
    makepkg_download ${baseurl}/${fenicspkg}/downloads/${fenicspkg}-${pkgver}.tar.gz
    makepkg_untar ${fenicspkg}-${pkgver}.tar.gz
    pushd ${fenicspkg}-${pkgver}
    # patches
    if [[ "x${fenicspkg}" == "xdolfin" ]]; then
      patch -Np0 < $REPO/buildfiles/dolfin_vtk_version.patch
      git apply $REPO/buildfiles/dolfin_hdf5_clib.patch
    elif [[ "x${fenicspkg}" == "xinstant" ]]; then
      patch -Np1 < $REPO/buildfiles/instant_python_exe.patch
    fi
    popd
  done
  popd
  # clean-up
  [[ -d $builddir ]] && rm -rf $builddir
  mkdir $builddir
  # remove old installation
  [[ -d $destdir ]] && rm -rfv $destdir
  # install dependencies
  mkdir -pv $destdir/lib/python2.7/site-packages
  for fenicspkg in "ufl" "fiat" "instant" "ffc"; do
    pushd $tmpdir/${fenicspkg}-${pkgver}
    $PYTHON setup.py install --prefix=$destdir
    popd
  done
}

export CXXFLAGS="-fext-numeric-literals"
confopts=$(cat <<END_HEREDOC
-D BUILD_SHARED_LIBS:BOOL=ON
-D DOLFIN_ENABLE_TRILINOS:BOOL=OFF
-D DOLFIN_ENABLE_DOCS:BOOL=OFF
-D DOLFIN_ENABLE_TESTING:BOOL=OFF
-D PYTHON_EXECUTABLE:PATH=/usr/bin/python2
-D PYTHON_LIBRARY:PATH=`python2-config --prefix`/lib/libpython2.7.so
-D PYTHON_INCLUDE_DIR:PATH=`python2-config --prefix`/include/python2.7
END_HEREDOC
)

# override, this would delete $destdir
pre_package() { :; }

# install extra packages
post_package()
{
  pushd $tmpdir
  # mshr
  pushd mshr-${pkgver}
  [[ -d build ]] && rm -rf build
  mkdir -pv build && cd build
  cmake \
    -DCMAKE_INSTALL_PREFIX:PATH=$destdir \
    -D PYTHON_EXECUTABLE:PATH=/usr/bin/python2 \
    -D PYTHON_LIBRARY:PATH=`python2-config --prefix`/lib/libpython2.7.so \
    -D PYTHON_INCLUDE_DIR:PATH=`python2-config --prefix`/include/python2.7 \
    ../
  make install
  popd
  # libadjoint
  makepkg_git git@bitbucket.org:dolfin-adjoint/libadjoint.git libadjoint
  pushd libadjoint
  [[ -d build ]] && rm -rf build
  mkdir -pv build && cd build
  cmake \
    -DCMAKE_INSTALL_PREFIX:PATH=$destdir \
    -D PYTHON_EXECUTABLE:PATH=/usr/bin/python2 \
    -D PYTHON_LIBRARY:PATH=`python2-config --prefix`/lib/libpython2.7.so \
    -D PYTHON_INCLUDE_DIR:PATH=`python2-config --prefix`/include/python2.7 \
    ../
  make install
  popd
  # dolfin-adjoint
  makepkg_git git@bitbucket.org:dolfin-adjoint/dolfin-adjoint.git dolfin-adjoint
  pushd dolfin-adjoint
  python2 setup.py install --prefix=$destdir
  popd
  # moola
  makepkg_git https://github.com/funsim/moola.git moola
  pushd moola
  python2 setup.py install --prefix=$destdir
  popd
  popd
}

