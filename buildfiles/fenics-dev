# vim: set ft=sh:
pkgname=fenics
pkgver=dev
srcdir=dolfin

export PYTHONPATH=$PYTHONPATH:$destdir/lib/python2.7/site-packages
export PATH=$PATH:$destdir/bin

module load openmpi hdf5 cmake pkg-config \
            petsc/dev slepc/dev boost vtk pastix cppunit mumps \
            eigen suitesparse scotch metis parmetis \
            python ipython matplotlib sympy swig

prepare()
{
  # we install dolfin dependencies here
  if [ -d $destdir ]; then
    rm -rf $destdir
  fi
  mkdir -pv $destdir/lib/python2.7/site-packages
  if [ -d $tmpdir ]; then
    rm -rf $tmpdir
  fi
  mkdir -pv $tmpdir
  pushd $tmpdir
  # ply
  curl -O -L http://www.dabeaz.com/ply/ply-3.8.tar.gz
  tar xvfz ply-3.8.tar.gz
  pushd ply-3.8
  python setup.py install --prefix=$destdir
  popd
  for fenicspkg in "ufl" "fiat" "instant" "ffc"; do
    if [[ -d $fenicspkg ]]; then
      pushd $fenicspkg
      git pull
      popd
    else
      git clone git@bitbucket.org:fenics-project/${fenicspkg}.git
      if [[ ${fenicspkg} == "ffc" ]]; then
        pushd ${fenicspkg}
        #git apply $REPO/buildfiles/fenics_ffc_boost.patch
        #git apply $REPO/buildfiles/fenics_ffc_ufc_string.patch
        popd
      fi
    fi
    pushd ${fenicspkg}
    python setup.py install --prefix=$destdir
    popd
  done
  # dolfin
  if [[ -d dolfin ]]; then
    pushd dolfin
    git pull
    popd
  else
    git clone git@bitbucket.org:fenics-project/dolfin.git
    pushd dolfin
    patch -Np1 < $REPO/buildfiles/dolfin_find_metis.patch
    patch -Np0 < $REPO/buildfiles/dolfin_vtk_version.patch
    #git apply $REPO/buildfiles/dolfin_vtk_opengl.patch
    popd
  fi
  popd
}

configure()
{
  [[ -d $builddir ]] && rm -rf $builddir
  mkdir $builddir
  pushd $builddir
  cmake \
    -DCMAKE_INSTALL_PREFIX:PATH=$destdir \
    -DBUILD_SHARED_LIBS:BOOL=ON \
    -DCMAKE_SKIP_INSTALL_RPATH:BOOL=OFF \
    -DCMAKE_SKIP_BUILD_RPATH:BOOL=OFF \
    -DCMAKE_INSTALL_NAME_DIR:PATH=$destdir/lib \
    -DEIGEN3_INCLUDE_DIR:PATH=$EIGEN_DIR/include/eigen3 \
    -DAMD_DIR:PATH=$SUITESPARSE_DIR \
    -DUMFPACK_DIR:PATH=$SUITESPARSE_DIR \
    -DCHOLMOD_DIR:PATH=$SUITESPARSE_DIR \
    -DCMAKE_SHARED_LINKER_FLAGS="-L$MUMPS_DIR/lib -ldmumps" \
    ../
  popd
}
pre_package() { :; }

pkgmodule=$(cat <<-EOT
#%Module
# several modules are required for instant compilation
module load openmpi hdf5
module load python ipython matplotlib sympy swig numpy scipy
module load cmake pkg-config
module load boost vtk
module load eigen suitesparse scotch metis parmetis
module load petsc/dev slepc/dev gmsh/dev

set FENICS_DIR $REPO/opt/fenics-$pkgver

prepend-path PATH \$FENICS_DIR/bin
prepend-path MANPATH \$FENICS_DIR/share/man
prepend-path PKG_CONFIG_PATH \$FENICS_DIR/lib/pkgconfig
prepend-path PYTHONPATH \$FENICS_DIR/lib/python2.7/site-packages
EOT)
